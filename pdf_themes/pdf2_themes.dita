<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ljq_2dj_twb">
    <title>PDF2 theme files</title>
    <body>
        <p>For many years, DITA Information Architects have done battle with the mighty DITA Open
            Toolkit (DITA-OT) PDF2 plugin. Armed with Leigh White's indispensable tome <xref
                href="https://xmlpress.net/publications/dita/dita-for-print/" format="html"
                scope="external">DITA for Print</xref>, they have struggled to create custom PDF
            plugins that produce good looking PDFs from DITA source files. And while for truly
            bespoke PDF output, customizing the PDF2 plugin is the only way, release 4.0Â of the
            DITA-OT offers an somewhat easier (but by no means simple) way to work with the PDF2
            plugin - <i>theme</i> files.</p>
        <p>Prior to this, creating a custom PDF plugin involved creating a whole set of
            customization folders and override files (the system was based largely on the methods
            used in the Docbook Style Sheets). It involved hacking around in XSLT templates and
            attributes files. Generally this was done by consultants, usually when the team first
            converted to DITA. And generally the expertise was never passed on, or soon lost as team
            personnel changed. Something as simple as a logo change or an update to brand colors
            could prove an expensive nightmare for teams that did not have XSLT expertise on
            staff.</p>
        <p>Theme files are YAML files whose key/value pairs represent CSS properties and values (or
            actually XSL-FO properties which are <i>nearly</i> always the same). Once configured,
            the theme file can be applied to the build instruction. For example:</p>
        <pre translate="no" outputclass="language-bourne">dita -i some.ditamap -o out --format=pdf2 --theme=mytheme.yaml</pre>
        <p>The theme YAML file feeds the theme file parameters to the build-in PDF2 plugin at build
            time with no requirement to actually go in and mess with the XSLT attributes files
            within the PDF2 plugin itself. And although it may not solve all the problems of PDF
            creation from DITA, it goes a long way to help documentation teams work with PDF output
            in a manageable and maintainable way.</p>
    </body>
</topic>
